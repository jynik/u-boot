/*
 * Copyright (C) 2016 Freescale Semiconductor, Inc.
 *
 * SPDX-License-Identifier:	GPL-2.0+
 */

#define __ASSEMBLY__
#include <config.h>

/* image version */

IMAGE_VERSION 2

BOOT_FROM	nand

#ifdef CONFIG_SECURE_BOOT
CSF CONFIG_CSF_SIZE
#endif

/*
 * Device Configuration Data (DCD)
 *
 * Each entry must have the format:
 * Addr-type           Address        Value
 *
 * where:
 *	Addr-type register length (1,2 or 4 bytes)
 *	Address	  absolute address of the register
 *	value	  value to be stored in the register
 */

/* 240Ohm/4 = 60Ohm */
#define DDR_PAD_CTL_DSE_60Ohm	0x00000020 /* (4 << 3) */

/* 240Ohm/6 = 40Ohm */
#define DDR_PAD_CTL_DSE_40Ohm	0x00000030 /* (6 << 3) */

#define DDR_PAD_CTL_DSE		DDR_PAD_CTL_DSE_40Ohm

#define DDR_SEL_DDR3		0xc0000 /* (3 << 18) */

#define DDR_INPUT_DIFF_MODE	0x20000 /* (1 << 17) */

/* MT41K128M16JT-107:K in backward-compatible mode: DDR-800, tCK=2.5ns */
#define tCL		6
#define tCWL		5
#define tAL		0
#define tWL		(tAL + tCWL)
#define tCKE		3
#define tCKSRE		5
#define tCKSRX		tCKSRE
#define tRFC		64
#define tAOFPD		2 /* 2-8.5ns = 1-3CK ~ 2CK*/
#define tAONPD		tAOFPD
#define tODTLon		(tCWL + AL - 2)
#define tODTLoff	tODTLon
#define tANPD		(tWL - 1)
#define tXPDLL		10
#define tAXPD		(tANPD + tXPDLL)
#define tXS		(tRFC + 10)
#define tXP		6
#define tFAW		16
#define tRCD		6
#define tRP		13
#define tRC		20
#define tRAS		14
#define tWR		6
#define tMRD		4
#define tDLLK		512
#define tRTP		8
#define tWTR		8
#define tRRD		5
#define tXPR		68

#define MDPDC		(((tCKE - 1) << 16) | (tCKSRX << 3) | (tCKSRE))
#define MDOTC		(((tAOFPD - 1) << 27) | ((tAONPD - 1) << 24) | ((tANPD - 1) << 20) | ((tAXPD - 1) << 16) | (tODTLon << 12) | (tODTLoff << 4))
#define MDCFG0		(((tRFC-1) << 24) | ((tXS - 1) << 16) | ((tXP - 1) << 13) | ((tXPDLL - 1) << 9) | ((tFAW - 1) << 4) | (tCL - 3))

/*
 * Based on the I.MX6ULL_DDR3_Script_Aid_V0.01.xls init script
 * for i.MX6ULL DDR3 from https://community.nxp.com/docs/DOC-333791
 */

//=============================================================================
//  Enable all clocks (they are disabled by ROM code)
// =============================================================================
DATA 4 0x020c4068 0xffffffff
DATA 4 0x020c406c 0xffffffff
DATA 4 0x020c4070 0xffffffff
DATA 4 0x020c4074 0xffffffff
DATA 4 0x020c4078 0xffffffff
DATA 4 0x020c407c 0xffffffff
DATA 4 0x020c4080 0xffffffff

//=============================================================================
// IOMUX
//=============================================================================

// DDR IO TYPE:
// IOMUXC_SW_PAD_CTL_GRP_DDR_TYPE
DATA 4 0x020e04b4 DDR_SEL_DDR3
// IOMUXC_SW_PAD_CTL_GRP_DDRPKE
DATA 4 0x020e04ac 0x00000000

// CLOCK:
// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDCLK_0
DATA 4 0x020e027c DDR_PAD_CTL_DSE

// ADDRESS:
// IOMUXC_SW_PAD_CTL_PAD_DRAM_CAS
DATA 4 0x020e0250 DDR_PAD_CTL_DSE
// IOMUXC_SW_PAD_CTL_PAD_DRAM_RAS
DATA 4 0x020e024c DDR_PAD_CTL_DSE
// IOMUXC_SW_PAD_CTL_GRP_ADDDS
DATA 4 0x020e0490 DDR_PAD_CTL_DSE

//Control:
// IOMUXC_SW_PAD_CTL_PAD_DRAM_RESET: (DDR_SEL_DDR3 | DDR_PAD_CTL_DSE)
DATA 4 0x020e0288 0x000C0030
// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDBA2 - DSE can be configured using Group Control Register: IOMUXC_SW_PAD_CTL_GRP_CTLDS
DATA 4 0x020e0270 0x00000000
// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDODT0
DATA 4 0x020e0260 DDR_PAD_CTL_DSE
// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDODT1
DATA 4 0x020e0264 DDR_PAD_CTL_DSE
// IOMUXC_SW_PAD_CTL_GRP_CTLDS
DATA 4 0x020e04A0 DDR_PAD_CTL_DSE

// Data Strobes:
// IOMUXC_SW_PAD_CTL_GRP_DDRMODE_CTL
DATA 4 0x020e0494 DDR_INPUT_DIFF_MODE
// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS0
DATA 4 0x020e0280 DDR_PAD_CTL_DSE
// IOMUXC_SW_PAD_CTL_PAD_DRAM_SDQS1
DATA 4 0x020e0284 DDR_PAD_CTL_DSE

// Data:
// IOMUXC_SW_PAD_CTL_GRP_DDRMODE
DATA 4 0x020e04B0 DDR_INPUT_DIFF_MODE
// IOMUXC_SW_PAD_CTL_GRP_B0DS
DATA 4 0x020e0498 DDR_PAD_CTL_DSE
// IOMUXC_SW_PAD_CTL_GRP_B1DS
DATA 4 0x020e04A4 DDR_PAD_CTL_DSE

// IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM0
DATA 4 0x020e0244 DDR_PAD_CTL_DSE
// IOMUXC_SW_PAD_CTL_PAD_DRAM_DQM1
DATA 4 0x020e0248 DDR_PAD_CTL_DSE

/*
 * DDR Controller Registers
 *
 * Manufacturer:	Micron
 * Device Part Number:	MT41K128M16JT-107:K
 * Clock Freq.:		400MHz
 * Density per CS in Gb:2
 * Chip Selects used:	1
 * Number of Banks:	8
 * Row address:		14
 * Column address:	10
 * Data bus width	16
 */

// MMDC0_MDSCR, set the Configuration request bit during MMDC set up
DATA 4 0x021b001c 0x00008000

/*
 * Calibration setup.
 */

// DDR_PHY_P0_MPZQHWCTRL, enable both one-time & periodic HW ZQ calibration.
DATA 4 0x021b0800 0xa1390003

// For target board, may need to run write leveling calibration to fine tune these settings.
DATA 4 0x021b080c 0x00000004

// Read DQS Gating calibration
// MPDGCTRL0 PHY0 - the xls file proposed 0x00000000
DATA 4 0x021b083c 0x41640158

// Read calibration
// MPRDDLCTL PHY0 - the xls file proposed 0x40404040
DATA 4 0x021b0848 0x40403237

// Write calibration
// MPWRDLCTL PHY0 - the xls file proposed 0x40404040
DATA 4 0x021b0850 0x40403C33

// read data bit delay: (3 is the reccommended default value, although out of reset value is 0)
// MMDC_MPRDDQBY0DL
DATA 4 0x021b081c 0x33333333
// MMDC_MPRDDQBY1DL
DATA 4 0x021b0820 0x33333333

// write data bit delay:
// MMDC_MPWRDQBY0DL
DATA 4 0x021b082c 0xf3333333
// MMDC_MPWRDQBY1DL
DATA 4 0x021b0830 0xf3333333

// DQS&CLK Duty Cycle
// [MMDC_MPDCCR] MMDC Duty Cycle Control Register
DATA 4 0x021b08c0 0x00944009

//Complete calibration by forced measurement:
// DDR_PHY_P0_MPMUR0, frc_msr
DATA 4 0x021b08b8 0x00000800

/*
 * Calibration setup end
 */

// MMDC init:
// MMDC0_MDPDC
DATA 4 0x021b0004 0x0002002D
// MMDC0_MDOTC - the xls file proposed 0x1B333030, but maximum values of tAONPD/tAOFFPD is (2-8ns/2.5ns)=3CK instead of 4CK
DATA 4 0x021b0008 0x09333030
/*
 * MMDC0_MDCFG0
 * Set tRFC to 140 to cover both
 *   MT41K128M16JT-107:K (256 MB)
 * and
 *   MT41K256M16TW-107 IT:P (512 MB).
 * The 256 MB chip was initially tested at tRFC=104,
 * so increase it to be on the safe side.
 * Note that tXS=tRFC+4 (4CK=10ns)
 */
DATA 4 0x021b000C 0x8B8F52F3
// MMDC0_MDCFG1
DATA 4 0x021b0010 0xB66D0B63
// MMDC0_MDCFG2
DATA 4 0x021b0014 0x01FF00DB

/*
 * MMDC0_MDMISC
 * - CK1_GATING = 1 (MMDC drives only one clock toward the DDR memory (CK0));
 * - WALAT = 0 (No additional latency required);
 * - LPDDR2_S2 = 0 (This bit should be cleared in DDR3 mode);
 * - MIF3_MODE = 3 (Enable prediction based on: Valid access on first pipe line stage, Valid access on axi bus, Next miss access from access queue);
 * - RALAT = 5 (5 cycles additional latency).
 */
DATA 4 0x021b0018 0x00201740
// MMDC0_MDSCR, set the Configuration request bit during MMDC set up
DATA 4 0x021b001c 0x00008000
// MMDC0_MDRWD
DATA 4 0x021b002c 0x000026D2
// MMDC0_MDOR
DATA 4 0x021b0030 0x006B1023
// Chan0 CS0_END
DATA 4 0x021b0040 0x0000004F
/*
 * MMDC0_MDCTL
 * Set ROW to 15 bits initially
 * to support both
 *   MT41K128M16JT-107:K (256 MB)
 * and
 *   MT41K256M16TW-107 IT:P (512 MB).
 * It will be decremented later for the 256 MB chip.
 */
DATA 4 0x021b0000 0x84180000

// MPPDCMPR2
DATA 4 0x021b0890 0x00400000

/*
 * Mode register writes
 * MMDC0_MDSCR, MR2 write, CS0
 * - 60Ohm ODT;
 * - CWL = 5CK.
 */
DATA 4 0x021b001c 0x02008032
// MMDC0_MDSCR, MR3 write, CS0
DATA 4 0x021b001c 0x00008033
/*
 * MMDC0_MDSCR, MR1 write, CS0
 * - Qoff disabled;
 * - TDQS disabled;
 * - 60Ohm ODT;
 * - Write leveling disabled;
 * - AL = 0;
 * - Out drive strength 40Ohm;
 * - DLL enable (normal).
 */
DATA 4 0x021b001c 0x00048031
/*
 * MMDC0_MDSCR, MR0write, CS0
 * - DLLon - fast precharge PD;
 * - Write recovery = 6;
 * - DLL reset = yes;
 * - CL = 6CK;
 * - Read burst type = sequential;
 * - Burst length = 8.
 */
DATA 4 0x021b001c 0x15208030
// MMDC0_MDSCR, ZQ calibration command sent to device on CS0
DATA 4 0x021b001c 0x04008040

// MMDC0_MDREF
DATA 4 0x021b0020 0x00000800

// DDR_PHY_P0_MPODTCTRL
DATA 4 0x021b0818 0x00000227
// MMDC0_MDPDC now SDCTL power down enabled
DATA 4 0x021b0004 0x0002552D
// MMDC0_MAPSR ADOPT power down enabled, MMDC will enter automatically to self-refresh while the number of idle cycle reached.
DATA 4 0x021b0404 0x00011006
// MMDC0_MDSCR, clear this register (especially the configuration bit as initialization is complete)
DATA 4 0x021b001c 0x00000000
